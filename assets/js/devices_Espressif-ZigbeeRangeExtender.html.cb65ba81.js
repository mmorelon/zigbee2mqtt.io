"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[40127],{48914:(e,t,i)=>{i.r(t),i.d(t,{comp:()=>a,data:()=>n});var o=i(9588);const r={},a=(0,i(23762).A)(r,[["render",function(e,t){const i=(0,o.g2)("RouteLink");return(0,o.uX)(),(0,o.CE)("div",null,[t[11]||(t[11]=(0,o.Lk)("h1",{id:"espressif-zigbeerangeextender",tabindex:"-1"},[(0,o.Lk)("a",{class:"header-anchor",href:"#espressif-zigbeerangeextender"},[(0,o.Lk)("span",null,"Espressif ZigbeeRangeExtender")])],-1)),(0,o.Lk)("table",null,[t[6]||(t[6]=(0,o.Lk)("thead",null,[(0,o.Lk)("tr",null,[(0,o.Lk)("th"),(0,o.Lk)("th")])],-1)),(0,o.Lk)("tbody",null,[t[2]||(t[2]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Model"),(0,o.Lk)("td",null,"ZigbeeRangeExtender")],-1)),(0,o.Lk)("tr",null,[t[1]||(t[1]=(0,o.Lk)("td",null,"Vendor",-1)),(0,o.Lk)("td",null,[(0,o.bF)(i,{to:"/supported-devices/#v=Espressif"},{default:(0,o.k6)(()=>[...t[0]||(t[0]=[(0,o.eW)("Espressif",-1)])]),_:1})])]),t[3]||(t[3]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Description"),(0,o.Lk)("td",null,"Espressif Zigbee Range Extender")],-1)),t[4]||(t[4]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Exposes"),(0,o.Lk)("td",null,"identify")],-1)),t[5]||(t[5]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Picture"),(0,o.Lk)("td",null,[(0,o.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/Espressif-ZigbeeRangeExtender.png",alt:""})])],-1))])]),t[12]||(t[12]=(0,o.Fv)('<h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><h2 id="readme-from-arduino-ide" tabindex="-1"><a class="header-anchor" href="#readme-from-arduino-ide"><span>Readme from Arduino IDE</span></a></h2><p><a href="https://github.com/espressif/arduino-esp32/blob/master/libraries/Zigbee/examples/Zigbee_Range_Extender/README.md" target="_blank" rel="noopener noreferrer">Link to Arduino-ESP32 Zigbee Range Extender (Router) Example</a></p><h3 id="pairing" tabindex="-1"><a class="header-anchor" href="#pairing"><span>Pairing</span></a></h3><p>power on device via USB and permit join in zigbee2mqtt.</p><h2 id="ota-updates" tabindex="-1"><a class="header-anchor" href="#ota-updates"><span>OTA updates</span></a></h2>',6)),(0,o.Lk)("p",null,[t[8]||(t[8]=(0,o.eW)("This device supports OTA updates, for more information see ",-1)),(0,o.bF)(i,{to:"/guide/usage/ota_updates.html"},{default:(0,o.k6)(()=>[...t[7]||(t[7]=[(0,o.eW)("OTA updates",-1)])]),_:1}),t[9]||(t[9]=(0,o.eW)(".",-1))]),t[13]||(t[13]=(0,o.Lk)("h2",{id:"options",tabindex:"-1"},[(0,o.Lk)("a",{class:"header-anchor",href:"#options"},[(0,o.Lk)("span",null,"Options")])],-1)),(0,o.Lk)("p",null,[(0,o.Lk)("em",null,[(0,o.bF)(i,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,o.k6)(()=>[...t[10]||(t[10]=[(0,o.eW)("How to use device type specific configuration",-1)])]),_:1})])]),t[14]||(t[14]=(0,o.Fv)('<ul><li><code>identify_timeout</code>: Sets the duration of the identification procedure in seconds (i.e., how long the device would flash).The value ranges from 1 to 30 seconds (default: 3). The value must be a number with a minimum value of <code>1</code> and with a with a maximum value of <code>30</code></li></ul><h2 id="firmware-flashing-guide-for-esp32-zigbee-router" tabindex="-1"><a class="header-anchor" href="#firmware-flashing-guide-for-esp32-zigbee-router"><span>Firmware Flashing Guide for ESP32 Zigbee Router</span></a></h2><p>This guide provides step-by-step instructions to compile and flash the standard Zigbee router firmware to an Espressif ESP32-C6/H2 board, enabling it to act as a Zigbee network range extender with Zigbee2MQTT.</p><h1 id="prerequisites" tabindex="-1"><a class="header-anchor" href="#prerequisites"><span>Prerequisites</span></a></h1><p>Arduino IDE: A powerful integrated development environment for coding and compiling.</p><p>ESP32-C6/H2 Board: An Espressif board with Zigbee support.</p><p>USB Cable: To connect the board to your computer.</p><ol><li>Prepare the Arduino IDE 1.1. Install ESP32 Board Manager</li></ol><p>In the Arduino IDE, go to File &gt; Preferences.</p><p>In the Additional Boards Manager URLs field, paste this URL: https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json</p><p>Click OK.</p><p>Go to Tools &gt; Board &gt; Boards Manager....</p><p>Search for &quot;esp32&quot; and install the esp32 package by Espressif.</p><p>1.2. Select Your Board</p><p>From the Tools menu, hover over Board and select your specific board (e.g., ESP32C6 Dev Module or ESP32H2 Dev Module).</p><p>Select the correct COM port under Tools &gt; Port.</p><ol start="2"><li>Configure the Zigbee Sketch 2.1. Open the Example Sketch</li></ol><p>Go to File &gt; Examples &gt; ESP Zigbee &gt; Zigbee_Range_Extender. This will open a new sketch in a new window.</p><p>2.2. Adjust Board Settings</p><p>Navigate to the Tools menu and set the following options:</p><p>Zigbee mode: Select Zigbee ZCZR (coordinator/router).</p><p>Partition Scheme: Select Zigbee 4MB with spiffs (or a similar size appropriate for your board). This partition layout is optimized for Zigbee firmware.</p><ol start="3"><li>Compile and Upload the Firmware 3.1. Compile the Firmware</li></ol><p>In the sketch window, click the Verify button (the checkmark icon) to compile the code. Wait for the process to complete without errors.</p><p>3.2. Upload to the Board</p><p>Click the Upload button (the right arrow icon) to flash the firmware to your ESP32 board.</p><p>The IDE will show progress. If the upload fails, you may need to press and hold the BOOT button on your board while the upload starts.</p><ol start="4"><li>Connect to Zigbee2MQTT 4.1. Enable Zigbee2MQTT Joining</li></ol><p>Open the Zigbee2MQTT web interface.</p><p>Click Permit join at the top of the screen. This opens your Zigbee network for new devices for a set period.</p><p>4.2. Power on the Router</p><p>Plug in your newly flashed ESP32 board. The device will automatically attempt to connect to the open Zigbee network.</p><p>After a few seconds, it should appear in your Zigbee2MQTT device list. If it doesn&#39;t appear, try pressing the BOOT button to trigger a re-join, or refer to the Arduino IDE&#39;s Serial Monitor for debugging information.</p>',33))])}]]),n=JSON.parse('{"path":"/devices/Espressif-ZigbeeRangeExtender.html","title":"Espressif ZigbeeRangeExtender control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Espressif ZigbeeRangeExtender control via MQTT","description":"Integrate your Espressif ZigbeeRangeExtender via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-09-08T20:08:17.000Z"},"git":{"updatedTime":1757703499000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"86dd3c6e8f26f412d8e1fe30bc4ad4c943e9fed0","time":1757703499000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Fix device images https://github.com/Koenkk/zigbee2mqtt/discussions/28606"}]},"filePathRelative":"devices/Espressif-ZigbeeRangeExtender.md"}')}}]);