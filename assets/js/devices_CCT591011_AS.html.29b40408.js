"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[42004],{72387:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>n,data:()=>o});var c=a(9588);const r={},n=(0,a(23762).A)(r,[["render",function(e,t){const a=(0,c.g2)("RouteLink");return(0,c.uX)(),(0,c.CE)("div",null,[t[7]||(t[7]=(0,c.Lk)("h1",{id:"schneider-electric-cct591011-as",tabindex:"-1"},[(0,c.Lk)("a",{class:"header-anchor",href:"#schneider-electric-cct591011-as"},[(0,c.Lk)("span",null,"Schneider Electric CCT591011_AS")])],-1)),(0,c.Lk)("table",null,[t[6]||(t[6]=(0,c.Lk)("thead",null,[(0,c.Lk)("tr",null,[(0,c.Lk)("th"),(0,c.Lk)("th")])],-1)),(0,c.Lk)("tbody",null,[t[2]||(t[2]=(0,c.Lk)("tr",null,[(0,c.Lk)("td",null,"Model"),(0,c.Lk)("td",null,"CCT591011_AS")],-1)),(0,c.Lk)("tr",null,[t[1]||(t[1]=(0,c.Lk)("td",null,"Vendor",-1)),(0,c.Lk)("td",null,[(0,c.bF)(a,{to:"/supported-devices/#v=Schneider%20Electric"},{default:(0,c.k6)(()=>[...t[0]||(t[0]=[(0,c.eW)("Schneider Electric",-1)])]),_:1})])]),t[3]||(t[3]=(0,c.Lk)("tr",null,[(0,c.Lk)("td",null,"Description"),(0,c.Lk)("td",null,"Wiser window/door sensor")],-1)),t[4]||(t[4]=(0,c.Lk)("tr",null,[(0,c.Lk)("td",null,"Exposes"),(0,c.Lk)("td",null,"battery_low, contact, tamper")],-1)),t[5]||(t[5]=(0,c.Lk)("tr",null,[(0,c.Lk)("td",null,"Picture"),(0,c.Lk)("td",null,[(0,c.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/CCT591011_AS.png",alt:"Schneider Electric CCT591011_AS"})])],-1))])]),t[8]||(t[8]=(0,c.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="battery-low-binary" tabindex="-1"><a class="header-anchor" href="#battery-low-binary"><span>Battery low (binary)</span></a></h3><p>Indicates if the battery of this device is almost empty. Value can be found in the published state on the <code>battery_low</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> battery low is ON, if <code>false</code> OFF.</p><h3 id="contact-binary" tabindex="-1"><a class="header-anchor" href="#contact-binary"><span>Contact (binary)</span></a></h3><p>Indicates if the contact is closed (= true) or open (= false). Value can be found in the published state on the <code>contact</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>false</code> contact is ON, if <code>true</code> OFF.</p><h3 id="tamper-binary" tabindex="-1"><a class="header-anchor" href="#tamper-binary"><span>Tamper (binary)</span></a></h3><p>Indicates whether the device is tampered. Value can be found in the published state on the <code>tamper</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> tamper is ON, if <code>false</code> OFF.</p>',7))])}]]),o=JSON.parse('{"path":"/devices/CCT591011_AS.html","title":"Schneider Electric CCT591011_AS control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Schneider Electric CCT591011_AS control via MQTT","description":"Integrate your Schneider Electric CCT591011_AS via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2023-02-01T14:45:57.000Z"},"git":{"updatedTime":1757703499000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"86dd3c6e8f26f412d8e1fe30bc4ad4c943e9fed0","time":1757703499000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"Fix device images https://github.com/Koenkk/zigbee2mqtt/discussions/28606"}]},"filePathRelative":"devices/CCT591011_AS.md"}')}}]);